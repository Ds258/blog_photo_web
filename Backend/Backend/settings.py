"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from os import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent #blog_photo_web

REAL_BASE_DIR = Path(__file__).resolve().parent.parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ky&dvc!&t-@)r*t&slzr1i!trgx2zq$dj+mr(e)&^$h$8bta&0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# Application definition

INSTALLED_APPS = [
    'User',
    'Blog',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'Backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], #os.path.join(BASE_DIR, 'frontend/build')
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

NS_TEST_DB_HOST = "localhost"
if environ.get('NS_TEST_DB_HOST') is not None:
    NS_TEST_DB_HOST = environ.get('NS_TEST_DB_HOST')
NS_TEST_DB_PORT = "5432"
if environ.get('NS_TEST_DB_PORT') is not None:
    NS_TEST_DB_PORT = environ.get('NS_TEST_DB_PORT')
NS_TEST_DB_NAME = "Blog_Photo_Web"
if environ.get('NS_TEST_DB_NAME') is not None:
    NS_TEST_DB_NAME = environ.get('NS_TEST_DB_NAME')
NS_TEST_DB_SCHEMA = "public"
if environ.get('NS_TEST_DB_SCHEMA') is not None:
    NS_TEST_DB_SCHEMA = environ.get('NS_TEST_DB_SCHEMA')
NS_TEST_DB_USER = "postgres"
if environ.get('NS_TEST_DB_USER') is not None:
    NS_TEST_DB_USER = environ.get('NS_TEST_DB_USER')
NS_TEST_DB_PASSWORD = "postgres2508"
if environ.get('NS_TEST_DB_PASSWORD') is not None:
    NS_TEST_DB_PASSWORD = environ.get('NS_TEST_DB_PASSWORD')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'OPTIONS': {
            'options': str('-c search_path=%s,public' % NS_TEST_DB_SCHEMA)
        },

        'NAME': NS_TEST_DB_NAME,
        'USER': NS_TEST_DB_USER,
        'PASSWORD': NS_TEST_DB_PASSWORD,
        'HOST': NS_TEST_DB_HOST,
        'PORT': NS_TEST_DB_PORT,
        'TEST': {
            'NAME': NS_TEST_DB_NAME,
            'USER': NS_TEST_DB_USER,
            'PASSWORD': NS_TEST_DB_PASSWORD,
            'HOST': NS_TEST_DB_HOST,
            'PORT': NS_TEST_DB_PORT,
            'SCHEMA': "test",
            # 'OPTIONS': {
            #     'options': str('-c search_path=%s' % "test")
            # },
        }

    }
}

AUTH_USER_MODEL = "User.User"

CORS_ALLOWED_ORIGINS = [
  "http://localhost:3000"
]

CSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'
CSRF_COOKIE_NAME = 'X-CSRFTOKEN'
CORS_ALLOW_HEADERS = [
  'X-CSRFTOKEN',
  'csrftoken',
  'X-XSRF-TOKEN',
  'content-type',
  'x-requested-with',
  'Authorization',
  'Set-Cookie'
]
CORS_ALLOW_CREDENTIALS = True
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://127.0.0.1:8000']
CSRF_COOKIE_DOMAIN = 'localhost:3000'
CSRF_COOKIE_PATH = '/'
SESSION_COOKIE_DOMAIN = 'http://localhost:3000'
CSRF_COOKIE_SECURE = False # Change to False for development with HTTP

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
  'django.contrib.auth.backends.ModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Add the path to your React build directory
# REACT_APP_DIR = os.path.join(BASE_DIR, 'frontend', 'build')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Cloudinary - Django Integration
# cloudinary.config (
#     cloud_name = "diih7pze7",
#     api_eky = "116465959964717",
#     api_secret = "PkMws3nqPEJPhPaF2ia2z5iYwJg"
# )